{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Content Recommendation Backend API's Specification",
    "description": "Content Recommendation is any system that you put in place for suggesting content that you think might be of interest to your readers. Most often, these systems recommend related content on the site, which encourages readers to explore the site more fully and become more engaged. ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Bridgelabz.com",
      "email": "admin@bridgelabz.com"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Login",
      "description": "API for Authentication"
    },
    {
      "name": "Content",
      "description": "The following methods allow you to maintain the set of content in the database."
    },
    {
      "name": "User",
      "description": "The following methods allow you to perform CRUD operation on users to the database."
    },
    {
      "name": "User-Content Interaction",
      "description": "The following method allow adding and listing of interactions between the users and the content."
    },
    {
      "name": "Recommendation",
      "description": "Recommendation methods allow you to get recommendations for a certain user (User based recommendation) or related items to a certain item (Item based recommendation)."
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "Content-Type": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "It authenticates the user email from company database and it returns success response with email.",
        "operationId": "for the URL",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "emailId",
            "in": "formData",
            "description": "Provide a valid email address to authenticate. e.g. your@some-domain.com",
            "required": true,
            "type": "string",
            "default": "admin@bridgelabz.com"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Provide a valid Password",
            "required": true,
            "type": "string",
            "format": "password",
            "default": "Bridge@123"
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication Successful",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User Logged in Successfully"
                }
              }
            }
          }
        }
      }
    },
    "/addContent": {
      "put": {
        "tags": [
          "Content"
        ],
        "description": "Add New Content To Database",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "formData",
            "description": "A unique ID of the content",
            "required": true,
            "type": "integer"
          },
          {
            "name": "contentName",
            "in": "formData",
            "description": "Name of the content",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentCategory",
            "in": "formData",
            "description": "The category to which the content belongs",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentDescription",
            "in": "formData",
            "description": "Description of the content",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentSubCategory",
            "in": "formData",
            "description": "The Subcategory of the content",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentImageURL",
            "in": "formData",
            "description": "The link to the content's image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Content succcessfully added"
                }
              }
            }
          }
        }
      }
    },
    "/deleteContent/{contentId}": {
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "Deletes data of the content from the database",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Unique Id of the content",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Content succcessfully deleted"
                }
              }
            }
          }
        }
      }
    },
    "/searchContent/{contentName}": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "Returns the data of the content present in the database",
        "operationId": "findByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentName",
            "in": "path",
            "description": "Name of the content",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "contentId": 12345,
                    "contentName": "Underworld Blood Wars",
                    "contentCategory": "Movies",
                    "contentSubCategory": "Action, Adventure",
                    "contentDescription": " In the next installment of the blockbuster franchise, Vampire death dealer Selene (Kate Beckinsale) fends off brutal attacks from both the Lycan clan and the Vampire faction that betrayed her. With her only allies, David (Theo James) and his father Thomas (Charles Dance), she must stop the eternal war between Lycans and Vampires, even if it means she has to make the ultimate sacrifice. ",
                    "contentImageURL": "http://cdn1-www.comingsoon.net/assets/uploads/gallery/underworld-blood-wars/underworldbwposter.jpg"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addUser": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Adds a new user to the Database",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "description": "A unique ID of the user",
            "required": true,
            "type": "integer"
          },
          {
            "name": "fullName",
            "in": "formData",
            "description": "Full name of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailId",
            "in": "formData",
            "description": "email-Id of the User",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "password of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "mobileNo",
            "in": "formData",
            "description": "mobile no. of the user",
            "required": true,
            "type": "integer"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "city of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "country",
            "in": "formData",
            "description": "country of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "dateOfBirth",
            "in": "formData",
            "description": "the user's date of birth",
            "required": true,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "formData",
            "description": "time when the account was created",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User succcessfully added"
                }
              }
            }
          }
        }
      }
    },
    "/searchUser/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Returns the data of the user present in the database",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique id of the user",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "userId": 1221,
                    "fullName": "Suhail Ahmad Khan",
                    "emailId": "suhail.khan@bridgelabz.com",
                    "password": "qwerty@123",
                    "mobileNo": 9588001787,
                    "city": "Mumbai",
                    "country": "India",
                    "dateOfBirth": "03-Sep-1988",
                    "timestamp": "1493186549"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteUser/{userId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Deletes data of the user from the database",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique Id of the user",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User succcessfully deleted"
                }
              }
            }
          }
        }
      }
    },
    "/updateUserInfo/{userId}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Updates User info in the Database",
        "operationId": "update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "A unique ID of the user",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userUpdateData",
            "in": "body",
            "description": "The data to be updated is passed here",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "mobileNo": 9821000014,
                "city": "Munich"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "userId": 1221,
                    "fullName": "Suhail Ahmad Khan",
                    "emailId": "suhail.khan@bridgelabz.com",
                    "password": "qwerty@123",
                    "mobileNo": 9930115633,
                    "city": "Mumbai",
                    "country": "India",
                    "dateOfBirth": "03-Sep-1988",
                    "timestamp": "1493186549"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recordContentView": {
      "post": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "Adds a view of the given content made by a given user",
        "operationId": "increment view count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "description": "unique ID of the user",
            "required": true,
            "type": "integer"
          },
          {
            "name": "contentId",
            "in": "formData",
            "description": "unique ID of the content",
            "required": true,
            "type": "integer"
          },
          {
            "name": "timestamp",
            "in": "formData",
            "description": "time when the content was viewed by the specific user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Content succcessfully viewed by user"
                }
              }
            }
          }
        }
      }
    },
    "/recordContentDownload": {
      "post": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "Adds a download of the given content made by a given user",
        "operationId": "increment download count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "description": "unique ID of the user",
            "required": true,
            "type": "integer"
          },
          {
            "name": "contentId",
            "in": "formData",
            "description": "unique ID of the content",
            "required": true,
            "type": "integer"
          },
          {
            "name": "timestamp",
            "in": "formData",
            "description": "time when the content was downloaded by the specific user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Content succcessfully downloaded by user"
                }
              }
            }
          }
        }
      }
    },
    "/recordContentLiked": {
      "post": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "Adds a like of the given content made by a given user",
        "operationId": "increment like count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "description": "unique ID of the user",
            "required": true,
            "type": "integer"
          },
          {
            "name": "contentId",
            "in": "formData",
            "description": "unique ID of the content",
            "required": true,
            "type": "integer"
          },
          {
            "name": "timestamp",
            "in": "formData",
            "description": "time when the content was liked by the specific user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Content succcessfully liked by user"
                }
              }
            }
          }
        }
      }
    },
    "/listContentView/{contentId}": {
      "get": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "It returns all the users who have viewed the content",
        "operationId": "list the content views",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Here you need to pass content Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "contentId": 30001,
                    "viewedUsers": [
                      {
                        "userId": 1234,
                        "timestamp": "140456465"
                      },
                      {
                        "userId": 2534,
                        "timestamp": "140453455"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/listContentDownload/{contentId}": {
      "get": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "It returns all the users who have downloaded the content",
        "operationId": "list the content downloads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Here you need to pass content Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "contentId": 30001,
                    "downloadedUsers": [
                      {
                        "userId": 1234,
                        "timestamp": "140456465"
                      },
                      {
                        "userId": 2534,
                        "timestamp": "140453455"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/listContentLiked/{contentId}": {
      "get": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "It returns all the users who have liked the content",
        "operationId": "list the content likes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Here you need to pass content Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "contentId": 30001,
                    "viewedUsers": [
                      {
                        "userId": 1234,
                        "timestamp": "140456465"
                      },
                      {
                        "userId": 2534,
                        "timestamp": "140453455"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/listUserView/{userId}": {
      "get": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "It returns all the contents viewed by the user",
        "operationId": "list the user views",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Here you need to pass user Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "userId": 1234,
                    "userViews": [
                      {
                        "contentId": 30001,
                        "timestamp": "140456465"
                      },
                      {
                        "contentId": 30005,
                        "timestamp": "140453455"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/listUserDownload/{userId}": {
      "get": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "It returns all the contents downloaded by the user",
        "operationId": "list the user downloads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Here you need to pass user Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "userId": 1234,
                    "userDownloads": [
                      {
                        "contentId": 30001,
                        "timestamp": "140456465"
                      },
                      {
                        "contentId": 30005,
                        "timestamp": "140453455"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/listUserLiked/{userId}": {
      "get": {
        "tags": [
          "User-Content Interaction"
        ],
        "description": "It returns all the content liked by the user",
        "operationId": "list the user likes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Here you need to pass user Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "userId": 1234,
                    "userLikes": [
                      {
                        "contentId": 30001,
                        "timestamp": "140456465"
                      },
                      {
                        "contentId": 30005,
                        "timestamp": "140453455"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/userBasedRecommendation": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "description": "Based on user’s past interactions with the contents, recommends content that are most likely to be of high value for a given user.",
        "operationId": "get recommendation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Here you need to pass user Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "recommendedContent": [
                      {
                        "contentId": 12345,
                        "contentName": "Underworld Blood Wars",
                        "contentCategory": "Movies",
                        "contentSubCategory": "Action, Adventure",
                        "contentDescription": " In the next installment of the blockbuster franchise, Vampire death dealer Selene (Kate Beckinsale) fends off brutal attacks from both the Lycan clan and the Vampire faction that betrayed her. With her only allies, David (Theo James) and his father Thomas (Charles Dance), she must stop the eternal war between Lycans and Vampires, even if it means she has to make the ultimate sacrifice. ",
                        "contentImageURL": "http://cdn1-www.comingsoon.net/assets/uploads/gallery/underworld-blood-wars/underworldbwposter.jpg"
                      },
                      {
                        "contentId": 23456,
                        "contentName": "Doctor Strange",
                        "contentCategory": "Movies",
                        "contentSubCategory": "Action, Adventure",
                        "contentDescription": " From Marvel comes Doctor Strange, the story of world-famous neurosurgeon Dr. Stephen Strange, whose life changes forever after a horrific car accident robs him of the use of his hands. When traditional medicine fails him, he is forced to look for healing, and hope, in an unlikely place – a mysterious enclave known as Kamar-Taj. He quickly learns that this is not just a center for healing but also the front line of a battle against unseen dark forces bent on destroying our reality. Before long Strange – armed with newly acquired magical powers – is forced to choose whether to return to his old life or leave it all behind to defend the world as the most powerful sorcerer in existence. ",
                        "contentImageURL": "http://vignette2.wikia.nocookie.net/marvelcinematicuniverse/images/a/a4/DS_Endless_Possibilities_Poster.jpg/revision/latest?cb=20160909202223"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contentBasedRecommendation": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "description": "Recommends set of contents that are somehow related to one given content, X. Typical scenario for using content-based recommendation is when user A is viewing X. Then you may display items to the user that he might be also interested in. Content-recommendation request gives you contents, optionally taking the target user A into account.",
        "operationId": "get recommendation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "Here you need to pass content Id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "object",
                  "example": {
                    "recommendedContent": [
                      {
                        "contentId": 12345,
                        "contentName": "Underworld Blood Wars",
                        "contentCategory": "Movies",
                        "contentSubCategory": "Action, Adventure",
                        "contentDescription": " In the next installment of the blockbuster franchise, Vampire death dealer Selene (Kate Beckinsale) fends off brutal attacks from both the Lycan clan and the Vampire faction that betrayed her. With her only allies, David (Theo James) and his father Thomas (Charles Dance), she must stop the eternal war between Lycans and Vampires, even if it means she has to make the ultimate sacrifice. ",
                        "contentImageURL": "http://cdn1-www.comingsoon.net/assets/uploads/gallery/underworld-blood-wars/underworldbwposter.jpg"
                      },
                      {
                        "contentId": 23456,
                        "contentName": "Doctor Strange",
                        "contentCategory": "Movies",
                        "contentSubCategory": "Action, Adventure",
                        "contentDescription": " From Marvel comes Doctor Strange, the story of world-famous neurosurgeon Dr. Stephen Strange, whose life changes forever after a horrific car accident robs him of the use of his hands. When traditional medicine fails him, he is forced to look for healing, and hope, in an unlikely place – a mysterious enclave known as Kamar-Taj. He quickly learns that this is not just a center for healing but also the front line of a battle against unseen dark forces bent on destroying our reality. Before long Strange – armed with newly acquired magical powers – is forced to choose whether to return to his old life or leave it all behind to defend the world as the most powerful sorcerer in existence. ",
                        "contentImageURL": "http://vignette2.wikia.nocookie.net/marvelcinematicuniverse/images/a/a4/DS_Endless_Possibilities_Poster.jpg/revision/latest?cb=20160909202223"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
